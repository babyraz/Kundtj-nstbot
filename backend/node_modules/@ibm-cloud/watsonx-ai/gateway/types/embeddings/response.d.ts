import { Usage } from "../tokens.js";
/**
 * An embedding in an embedding vector.
 */
export interface Embedding {
    /** Embedding vector, which is a list of floats or a base64 string.
     *  The length of vector depends on the model. For OpenAI's models, as listed in their [embedding guide].
     *
     *  [embedding guide]: https://platform.openai.com/docs/guides/embeddings.
     */
    embedding: number[];
    /** Index of the embedding in the list of embeddings. */
    index: number;
    /** Object type, which is always `"embedding"`. */
    object: Embedding.Constants.Object | string;
}
export declare namespace Embedding {
    namespace Constants {
        /** Object type, which is always `"embedding"`. */
        enum Object {
            EMBEDDING = "embedding"
        }
    }
}
/**
 * An embeddings response generated by a model.
 */
export interface EmbeddingResponse {
    /** A list of embedding objects generated by the model. */
    data: Embedding[];
    /** The ID of the model used to create the embeddings. The same as the `model` provided in the request. */
    model: string;
    /** Object type, which is always `"list"`. */
    object: EmbeddingResponse.Constants.Object | string;
    /** Usage information for a model request. */
    usage?: Usage;
}
export declare namespace EmbeddingResponse {
    namespace Constants {
        /** Object type, which is always `"list"`. */
        enum Object {
            LIST = "list"
        }
    }
}
//# sourceMappingURL=response.d.ts.map